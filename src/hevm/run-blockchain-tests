#!/usr/bin/env bash
set -e

HEVM=${HEVM:-hevm}

skip=''
test=''
timeout=10
usage() { echo "Usage: $(basename "$0") [--skip=<pattern>] [--test=<pattern>] [--timeout=<seconds>] <tests-dir>" 1>&2; exit 1; }
OPTS=$(getopt --name="$0" --options=d --longoptions="skip:,test:,timeout:" -- "$@") || usage
eval set -- "$OPTS"
while true; do
  case "$1" in
    --skip)    skip=$2; shift 2 ;;
    --test)    test=$2; shift 2 ;;
    --timeout) timeout=$2; shift 2 ;;
    --) shift; break ;;
    *) usage ;;
  esac
done
if [[ $# -ne 1 ]]; then
  usage
fi
tests=$1

shopt -s nocasematch
{
  cd "$tests"
  for x in BlockchainTests/GeneralStateTests/*/*; do
    if [[ $x =~ .*$test.* ]] && [[ -n $skip && $x =~ .*$skip.* ]]; then
      for job in $(<$x jq '.|keys[]' -r); do
        echo -n "$x " ; echo -n "$job " ; echo "skip"
      done
    elif [[ $x =~ .*$test.* ]]; then
      set +e
      echo -n "$x " ; "$HEVM" bc-test --file $x --timeout $timeout 2>&1
      set -e
    fi
  done
} | {
  while read path test outcome; do
    echo >&2 "$path $test $outcome"
    category=$(dirname "$path")
    testcase=$(basename "${path%.json}")
    row="<tr><td class=testcase>$testcase<td>$outcome<td class=category>$category"
    row+=$'\n'
    case $outcome in
      ok)          passed+=$row ;;
      bad-balance) balancefailed+=$row ;;
      bad-nonce)   noncefailed+=$row ;;
      bad-storage) storagefailed+=$row ;;
      skip)        skipped+=$row ;;
      *)           failed+=$row ;;
    esac
  done

  npass=$(echo -ne "$passed" | wc -l)
  nbal=$(echo -ne "$balancefailed" | wc -l)
  nnon=$(echo -ne "$noncefailed" | wc -l)
  nstr=$(echo -ne "$storagefailed" | wc -l)
  nfail=$(echo -ne "$failed" | wc -l)
  nskip=$(echo -ne "$skipped" | wc -l)

  cat <<.
<!doctype html>
<title>hevm test results</title>
<style>
* {
  font-family:
    "latin modern mono", "fantasque sans mono",
    inconsolata, menlo, monospace;
  font-size: 22px;
  line-height: 26px;
}

body { margin: 2rem; }
header { text-align: center; margin: 4rem 0; }
table { border-collapse: collapse; width: 100%; }
tr:nth-child(even) { background: rgba(0, 0, 0, 0.05); }
td:not(:first-child):not(:last-child) { padding: 0 1rem; }
.category { opacity: 0.6; text-align: right }
a { color: darkblue; text-decoration: none; }
h1, h2 { text-align: center; margin-top: 2rem  }
.testcase { font-weight: bold }
#failed .testcase { color: rgb(200, 0, 0) }
#balancefailed .testcase { color: rgb(200, 200, 0) }
#passed .testcase { color: rgb(0, 150, 0) }
#skipped .testcase { color: rgb(0, 100, 250) }
</style>
<header>
<h1>hevm consensus test report</h1>
<p>
$(date +%Y-%m-%d)
<p>
.

  echo "$npass passed, $nbal bad-balance, $nfail failed, $nskip skipped"

  cat <<.
<p>
(Test suite: <span class=GeneralStateTests</span>GeneralStateTests</span> for ConstantinopleFix)
</header>
<h2>Failed tests</h2>
<table id=failed>
<tbody>
.
  echo "$failed"
  cat <<.
</table>
<h2>Failed tests (due to balance only)</h2>
<table id=balancefailed>
<tbody>
.
  echo "$balancefailed"
  cat <<.
</table>
<h2>Skipped tests</h2>
<table id=skipped>
<tbody>
.
  echo "$skipped"
  cat <<.
</table>
<h2>Passed tests</h2>
<table id=passed>
<tbody>
.
  echo "$passed"
  cat <<.
</table>
.

  echo >&2 "passed: $npass"
  echo >&2 "bad-balance: $nbal"
  echo >&2 "bad-nonce: $nnon"
  echo >&2 "bad-storage: $nstr"
  echo >&2 "failed: $nfail"
  echo >&2 "skipped: $nskip"
}
